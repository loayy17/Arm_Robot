<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="arm_project">
    
    <!--inertia"-->
    <xacro:macro name="inertial_sphere" params="mass radius *origin">
        <inertial>
            <xacro:insert_block name="origin"/>
            <mass value="${mass}" />
            <inertia ixx="${(2/5) * mass * (radius*radius)}" ixy="0.0" ixz="0.0"
                    iyy="${(2/5) * mass * (radius*radius)}" iyz="0.0"
                    izz="${(2/5) * mass * (radius*radius)}" />
        </inertial>
    </xacro:macro>  
    <xacro:macro name="inertial_box" params="mass x y z *origin">
        <inertial>
            <xacro:insert_block name="origin"/>
            <mass value="${mass}" />
            <inertia ixx="${(1/12) * mass * (y*y+z*z)}" ixy="0.0" ixz="0.0"
                    iyy="${(1/12) * mass * (x*x+z*z)}" iyz="0.0"
                    izz="${(1/12) * mass * (x*x+y*y)}" />
        </inertial>
    </xacro:macro>
    <xacro:macro name="inertial_cylinder" params="mass length radius *origin">
        <inertial>
            <xacro:insert_block name="origin"/>
            <mass value="${mass}" />
            <inertia ixx="${(1/12) * mass * (3*radius*radius + length*length)}" ixy="0.0" ixz="0.0"
                    iyy="${(1/12) * mass * (3*radius*radius + length*length)}" iyz="0.0"
                    izz="${(1/2) * mass * (radius*radius)}" />
        </inertial>
    </xacro:macro>

    <!--Constants-->
    <xacro:property name="arm_length" value="1" />
    <xacro:property name="arm_radius" value="0.1" />
    
    <!-- Colors-->
    <material name="white">
        <color rgba="1 1 1 1" />
    </material>
    <material name="gray">
        <color rgba="0.5 0.5 0.5 1" />
    </material>   
    <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
    </material>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>
    <material name="green">
        <color rgba="0 1 0 1"/>
    </material>    
    <material name="yellow">
        <color rgba="1 1 0 1"/>
    </material> 




    <!--Links-->
    <link name="world"></link>
    <link name="base_link">
        <inertial>
            <origin xyz="0.0 0.0 0.25" rpy="0.0 0.0 0.0"/>
            <mass value="12.0"/>
            <inertia ixx="2.26" ixy="0.0" ixz="0.0" iyy="6.26" iyz="0.0" izz="8.5"/>
        </inertial>
        <visual name="base_link">
            <origin xyz="0.0 0.0 0.25" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="1.0 0.75 0.5"/>
            </geometry>
            <material name="green">
            </material>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.25" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="1.0 0.75 0.5"/>
            </geometry>
        </collision>
    </link>
    <link name="inside_link">
        <xacro:inertial_box mass="0.5" x="0.75" y="0.5" z="0.25">
            <origin xyz="0.0 0.0 0.125" rpy="0 0 0"/>
        </xacro:inertial_box>
        <visual name="inside_link">
            <origin xyz="0.0 0.0 0.125" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.75 0.5 0.25"/>
            </geometry>
            <material name="gray">
            </material>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.125" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.75 0.5 0.25"/>
            </geometry>
        </collision>
    </link>
    
    <link name="arm_link">
        <xacro:inertial_cylinder mass="1.0" length="${arm_length}" radius="${arm_radius}">
            <origin xyz="${arm_length/2} 0 0" rpy="0 ${pi/2} 0"/>
        </xacro:inertial_cylinder>
        <visual name="arm_link">
            <origin xyz="${arm_length/2} 0.0 0.125" rpy="0 ${pi/2} 0.0"/>
            <geometry>
                    <cylinder radius="0.1" length="1.0"/>
            </geometry>
            <material name="orange">
            </material>
        </visual>
        <collision>
            <origin xyz="${arm_length/2} 0.0 0.475" rpy="0 ${pi/2} 0.0"/>
            <geometry>
                    <cylinder radius="0.1" length="1.0"/>
            </geometry>
        </collision>
    </link>
    <link name="cyliner_inside">
        <xacro:inertial_cylinder mass="0.05" length="0.2" radius="0.15">
            <origin xyz="${arm_length/2} 0 0" rpy="0 ${pi/2} 0"/>
        </xacro:inertial_cylinder>
        <visual name="cyliner_inside">
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
                <geometry>
                    <cylinder radius="0.15" length="0.2"/>
                </geometry>
            <material name="orange">
            </material>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.6" rpy="0.0 0.0 0.0"/>
            <geometry>
                <cylinder radius="0.15" length="0.2"/>
            </geometry>
        </collision>
    </link>   
    <link name="rl">
        <xacro:inertial_box mass="0.005" x="0.05" y="0.4" z="0.2">
            <origin xyz=".0 0.0 0.0" rpy="0 0 0"/>
        </xacro:inertial_box>
        <visual name="rl">
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.05 0.4 0.2"/>
            </geometry>
            <material name="green">
            </material>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.05 0.4 0.2"/>
            </geometry>
        </collision>
    </link>
    <link name="r1">
        <xacro:inertial_box mass="0.005" x="0.2" y="0.05" z="0.15">
            <origin xyz=".0 0.0 0.0" rpy="0 0 0"/>
        </xacro:inertial_box>
        <visual name="r1">
            <origin xyz="0 0 0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.2 0.05 0.15"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.2 0.05 0.15"/>
            </geometry>
        </collision>
    </link>   
    <link name="l1">
        <xacro:inertial_box mass="0.005" x="0.2" y="0.05" z="0.15">
            <origin xyz=".0 0.0 0.0" rpy="0 0 0"/>
        </xacro:inertial_box>
        <visual name="l1">
            <origin xyz="0 0 0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.2 0.05 0.15"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
             <origin xyz="0 0 0 " rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.2 0.05 0.15"/>
            </geometry>
        </collision>
    </link>
    <link name="r11">
        <xacro:inertial_box mass="0.0025" x="0.125" y="0.05" z="0.15">
            <origin xyz=".0 0.0 0.0" rpy="0 0 -0.52"/>
        </xacro:inertial_box>
        <visual name="r11">
            <origin xyz="0 0.0 0.0" rpy="0.0 0.0 -0.52"/>
            <geometry>
                <box size="0.125 0.05 0.15"/>
            </geometry>
            <material name="gray"/>
        </visual>
        <collision>
            <origin xyz="0 0.0 0.0" rpy="0.0 0.0 -0.52"/>
            <geometry>
                <box size="0.125 0.05 0.15"/>
            </geometry>
        </collision>
    </link>         
    <link name="l11">
        <xacro:inertial_box mass="0.0025" x="0.125" y="0.05" z="0.15">
            <origin xyz=".0 0.0 0.0" rpy="0 0 -0.52"/>
        </xacro:inertial_box>
        <visual name="l11">
            <origin xyz="0 0 0" rpy="0.0 0.0 0.52"/>
            <geometry>
                <box size="0.125 0.05 0.15"/>
            </geometry>
            <material name="gray"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0.0 0.0 0.52"/>
            <geometry>
                <box size="0.125 0.05 0.15"/>
            </geometry>
        </collision>
    </link>
    <link name="camera_link">
        <visual>
            <origin xyz="-0.03 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.06 0.15 0.15" />
            </geometry>
            <material name="white" />
        </visual>
        <visual>
            <origin xyz="0.03 0 0" rpy="0 ${pi/2} 0"/>
            <geometry>
                <cylinder length="0.06" radius="0.04" />
            </geometry>
            <material name="blue" />
        </visual>
        <collision>
            <origin xyz="0.0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="0.12 0.15 0.15" />
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.1" x="0.12" y="0.15" z="0.15">
            <origin xyz="0.0 0 0" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>  
    
    <!-- Joints-->
    <joint name="world_base" type="fixed">
        <parent link="world" />
        <child link="base_link" />
    </joint> 
    
    <joint name="base_inside" type="prismatic">
        <origin xyz="0 0 0.25" rpy="0 0 0"/>
        <parent link="base_link"/>
        <child link="inside_link"/>
        <axis xyz="0 0 1"/>
        <limit lower="0" upper="0.25" velocity="100" effort="100"/> 
    </joint>
 
    <joint name="inside_cy" type="fixed">
        <parent link="inside_link"/>
        <child link="cyliner_inside"/>
        <origin xyz="0.0 0.0 0.35" rpy="0.0 0.0 0.0"/>
    </joint>

 
    <joint name="inside_arm" type="revolute">
        <origin xyz="0.0 0.0 -0.125" rpy="0.0 0.0 0.0"/>
        <parent link="cyliner_inside"/>
        <child link="arm_link"/>
        <axis xyz="0.0 0.0 0.6"/>
        <limit lower="0" upper="${-pi}" effort="0" velocity="0.5" />
    </joint>
    <joint name="rl_arm" type="fixed">
        <parent link="arm_link"/>
        <child link="rl"/>
        <origin xyz="1.0 0.0 0.125" rpy="0.0 0.0 0.0"/>
    </joint>
    <joint name="rl_l1" type="revolute">
        <parent link="rl"/>
        <child link="l1"/>
        <axis xyz="0 0 1"/>
        <limit lower="0" upper="0.523" velocity="50.0" effort="1000.0"/>
        <origin xyz="0.1 -0.125 0.0" rpy="0 0 0"/>
    </joint>
    <joint name="rl_r1" type="revolute">
        <parent link="rl"/>
        <child link="r1"/>
        <axis xyz="0 0 1"/>
        <limit lower="0" upper="-0.523" velocity="50.0" effort="1000.0"/>
        <origin xyz="0.1 0.125 0.0" rpy="0 0 0"/>
    </joint>        
    <joint name="r1_r11" type="fixed">
        <parent link="r1"/>
        <child link="r11"/>
        <origin xyz="0.125 -0.025 0" rpy="0.0 0.0 0.0"/>
    </joint> 
    <joint name="l1_l11" type="fixed">
        <parent link="l1"/>
        <child link="l11"/>
        <origin xyz="0.125 0.025 0" rpy="0.0 0.0 0.0"/>
    </joint>
    <joint name="camera_joint" type="fixed">
        <origin xyz="0 0 ${arm_radius + 0.05}" rpy="0 0 0"/>
        <parent link="rl"/>
        <child link="camera_link"/>        
    </joint>    
    <joint name="camera_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="-1.571 0 -1.571" />
        <parent link="camera_link" />
        <child link="camera_link_optical" />
    </joint>

    <link name="camera_link_optical"></link>
    
    <!--Gazebo reference -->
    <!-- Gazebo is unable to use the same <material> tags that are already in the URDF (that RViz uses). -->
    <!-- Instead, we need to add gazebo tags for our links that refer to Gazebo materials -->


    <gazebo reference="base_link">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>  
        <material>Gazebo/Black</material>
    </gazebo>

    <gazebo reference="inside_link">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/Gray</material>
    </gazebo>

    <gazebo reference="arm_link">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/Orange</material>
    </gazebo>
    <gazebo reference="cyliner_inside">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/Orange</material>
    </gazebo>

    <gazebo reference="rl">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/Green</material>
    </gazebo>

    <gazebo reference="r1">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/White</material>
    </gazebo>
    <gazebo reference="l1">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/White</material>
    </gazebo>

    <gazebo reference="r11">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/White</material>
    </gazebo>

    <gazebo reference="l11">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/White</material>
    </gazebo>

    <!-- Gazebo Plugin and Transmission-->
    <!-- Gazebo requires the use of plugins to interact with other systems such as ROS. -->
        
    <!-- This plugin will publish the joint_states for the selected joints 
            (which robot_state_publisher can then use to broadcast the approprate tf). -->

            <gazebo>
                <plugin name="JointStatePublisher"
                    filename="libgazebo_ros_joint_state_publisher.so">
                    <update_rate>2</update_rate>
                    <joint_name>base_inside</joint_name>
                    <joint_name>inside_arm</joint_name>  
                    <joint_name>rl_arm</joint_name>
                    <joint_name>rl_l1</joint_name>
                    <joint_name>rl_r1</joint_name> 
                </plugin>
            </gazebo>
            <transmission name="base_inside">
                <type>transmission_interface/SimpleTransmission</type>
                <joint name="base_inside">
                  <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                </joint>
                <actuator name="motor1">
                  <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                  <mechanicalReduction>1</mechanicalReduction>
                </actuator>
            </transmission>
            <transmission name="inside_arm">
                <type>transmission_interface/</type>
                <joint name="inside_arm">
                  <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                </joint>
                <actuator name="inside_arm">
                  <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                  <mechanicalReduction>1</mechanicalReduction>
                </actuator>
            </transmission>
            <transmission name="rl_l1">
                <type>transmission_interface/SimpleTransmission</type>
                <joint name="rl_l1">
                  <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                </joint>
                <actuator name="rl_l1">
                  <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                  <mechanicalReduction>1</mechanicalReduction>
                </actuator>
            </transmission>   
            <transmission name="rl_r1">
                <type>transmission_interface/SimpleTransmission</type>
                <joint name="rl_r1">
                  <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
                </joint>
                <actuator name="rl_r1">
                  <hardwareInterface>EffortJointInterface</hardwareInterface>
                  <mechanicalReduction>1</mechanicalReduction>
                </actuator>
            </transmission>     
            <gazebo>
                <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
                  <robotNamespace>/arm</robotNamespace>
                  <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
                  <legacyModeNS>true</legacyModeNS>
                  <controlPeriod>1</controlPeriod>
                  
                </plugin>
              </gazebo>
        
         
            <gazebo>
                <plugin name="gazebo_ros_joint_pose_trajectory"
                    filename="libgazebo_ros_joint_pose_trajectory.so">
                    <update_rate>2</update_rate>
                </plugin>
            </gazebo>
        
            <gazebo reference="camera_link">
                <sensor type="depth" name="my_camera">
                    <update_rate>20</update_rate>
                    <visualize>true</visualize>
                    <camera name="cam">
                        <horizontal_fov>1.3962634</horizontal_fov>
                        <image>
                            <width>640</width>
                            <height>480</height>
                            <format>R8B8G8</format>
                        </image>
                        <clip>
                            <near>0.02</near>
                            <far>300</far>
                        </clip>
                        <noise>
                            <type>gaussian</type>
                            <mean>0.0</mean>
                            <stddev>0.007</stddev>
                        </noise>
                    </camera>
                    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                        <frame_name>camera_link_optical</frame_name>
                        <min_depth>0.1</min_depth>
                        <max_depth>500</max_depth>
                    </plugin>
                </sensor>
            </gazebo>
            <gazebo reference="camera">
                <sensor type="camera" name="camera1">
                  <update_rate>30.0</update_rate>
                  <camera name="head">
                    <horizontal_fov>1.3962634</horizontal_fov>
                    <image>
                      <width>800</width>
                      <height>800</height>
                      <format>R8G8B8</format>
                    </image>
                    <clip>
                      <near>0.02</near>
                      <far>300</far>
                    </clip>
                    <noise>
                      <type>gaussian</type>
                      <mean>0.0</mean>
                      <stddev>0.007</stddev>
                    </noise>
                  </camera>
                  <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                    <alwaysOn>true</alwaysOn>
                    <updateRate>0.0</updateRate>
                    <cameraName>arm_project1/camera1</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
                    <frameName>Camera</frameName>
                    <hackBaseline>0.07</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                  </plugin>
                </sensor>
            </gazebo>
        
</robot>